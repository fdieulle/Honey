@page "/ninjas"

@using System.ComponentModel
@using AntDesign
@using AntDesign.TableModels
@using System.Collections.ObjectModel
@using Yumi
@using Dojo.Services;

@inject Dojo Dojo

<h3>Ninjas</h3>

<Space>
    <SpaceItem><Button Type="@ButtonType.Primary" OnClick="@(()=>{ _isVisible = true; })">Enroll Ninja</Button></SpaceItem>
    <SpaceItem><Button Type="@ButtonType.Primary" OnClick="@AddDummy">Add dummy</Button></SpaceItem>
</Space>

<Modal Title="New Ninja"
       Visible="@_isVisible"
       Footer="@null">
       <Form Model="@_newNinja"
             OnFinish="@Enroll"
             OnFinishFailed="@EnrollmentFailed">
            <FormItem Label="Url">
                <Input @bind-Value="@context.Address" />
            </FormItem>
            
            <Divider />
            <Row Justify="end">
                <Col Span="4">
                    <FormItem>
                        <Button Type="@ButtonType.Primary" HtmlType="submit">
                            Enroll
                        </Button>
                    </FormItem>
                </Col>
                <Col Span="4">
                    <FormItem>
                        <Button OnClick="()=>CancelEnrollment()">Cancel</Button>
                    </FormItem>
                </Col>
            </Row>
       </Form>
</Modal>
<AntDesign.Table 
    @ref="table"
    TItem="NinjaModel"
    DataSource="@_ninjas"   
>
    <Column Title="OS" Field="@context.OS">
        <Image Preview=false Width="25px" Src="@GetOSImage(context.OS)" />
    </Column>
    <Column Title="Active" Field="@context.IsUp">
        <Switch Value="@context.IsUp" Disabled />
    </Column>
    <Column @bind-Field="@context.Address" Sortable />
    <Column @bind-Field="@context.PercentFreeCores" Sortable>
        <Progress Percent="@context.PercentFreeCores" Type=ProgressType.Line StrokeColor=@GetColor(context.PercentFreeCores) />
    </Column>
    <Column @bind-Field="@context.PercentFreeMemory" Sortable>
        <Progress Percent="@context.PercentFreeMemory" Type=ProgressType.Line StrokeColor="@GetColor(context.PercentFreeMemory)" />
    </Column>
    <Column @bind-Field="@context.PercentFreeDiskSpace" Sortable>
        <Progress Percent="@context.PercentFreeDiskSpace" Type=ProgressType.Line StrokeColor=@GetColor(context.PercentFreeDiskSpace) />
    </Column>
    <ActionColumn>
        <Space>
            <SpaceItem><Button Danger OnClick="()=>Revoke(context.Address)">Revoke</Button></SpaceItem>
        </Space>
    </ActionColumn>

</AntDesign.Table>

@code {
    ITable table;
    ObservableCollection<NinjaModel> _ninjas = new ObservableCollection<NinjaModel>();
    bool _isVisible;
    NinjaModel _newNinja = new NinjaModel();

    protected override async Task OnInitializedAsync()
    {
        Dojo.NinjaAdded += NinjaAdded;
        Dojo.NinjaRemoved += NinjaRemoved;
        Dojo.Updated += Updated;
    }

    private void NinjaAdded(NinjaModel ninja)
    {
        _ninjas.Add(ninja);
    }

    private void NinjaRemoved(NinjaModel ninja)
    {
        _ninjas.Remove(ninja);
    }

    private void Updated()
    {
        InvokeAsync(StateHasChanged);
    }

    private void Enroll(EditContext editContext)
    {
        Dojo.EnrollNinja(_newNinja.Address);
        _isVisible = false;
    }

    private void EnrollmentFailed(EditContext editContext)
    {

    }

    private void CancelEnrollment()
    {
        _isVisible = false;
    }

    private void Revoke(string name)
    {
        Dojo.RevokeNinja(name);
    }

    string GetColor(double percent)
    {
        if (percent >= 90) return "#dc3545";
        if (percent >= 75) return "#fd7e14";
        return "#28a745";
    }

    string GetOSImage(string platform)
    {
        switch(platform)
        {
            case "Win32S":
            case "Win32Windows":
            case "Win32NT":
            case "WinCE":
                return "images/windows_microsoft_icon.png";
            case "Unix":
                return "images/tux_linux_icon.png";
            case "MacOSX":
                return "images/mac_osx_icon.png";
            case "Xbox":
                return "images/xbox_icon.png";
            default:
                return "images/server_center_data_icon.png";
        }
    }

    public void Dispose()
    {
        Dojo.NinjaAdded -= NinjaAdded;
        Dojo.NinjaRemoved -= NinjaRemoved;
        Dojo.Updated -= Updated;
    }

    private void AddDummy()
    {
        var dummy = _dummies[_ninjas.Count % _dummies.Count];
        _ninjas.Add(
            new NinjaModel
                {
                    IsUp = dummy.IsUp,
                    OS = dummy.OS,
                    Address = $"https://machine{_ninjas.Count + 1}:8080",
                    PercentFreeCores = dummy.PercentFreeCores,
                    PercentFreeMemory = dummy.PercentFreeMemory,
                    PercentFreeDiskSpace = dummy.PercentFreeDiskSpace,
                });
    }

    private readonly List<NinjaModel> _dummies = new List<NinjaModel>
    {
        new NinjaModel
        {
            IsUp = true,
            OS = "Unix",
            Address = "Machine 1",
            PercentFreeCores = 30,
            PercentFreeMemory = 30,
            PercentFreeDiskSpace = 30,
        },
        new NinjaModel
        {
            IsUp = true,
            OS = "MacOSX",
            Address = "Machine 2",
            PercentFreeCores = 75,
            PercentFreeMemory = 75,
            PercentFreeDiskSpace = 75,
        },
        new NinjaModel
        {
            IsUp = true,
            OS = "Win32NT",
            Address = "Machine 3",
            PercentFreeCores = 90,
            PercentFreeMemory = 90,
            PercentFreeDiskSpace = 90,
        },
        new NinjaModel
        {
            OS = "Xbox",
            Address = "Machine 4",
            PercentFreeCores = 20,
            PercentFreeMemory = 50,
            PercentFreeDiskSpace = 80,
        },
        new NinjaModel
        {
            OS = "Other",
            Address = "Machine 5",
            PercentFreeCores = 0,
            PercentFreeMemory = 5,
            PercentFreeDiskSpace = 100,
        },
    };
}
